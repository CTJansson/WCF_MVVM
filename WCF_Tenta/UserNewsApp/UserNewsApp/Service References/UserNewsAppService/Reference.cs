//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UserNewsApp.UserNewsAppService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserNewsPost", Namespace="http://schemas.datacontract.org/2004/07/UserNewsAppService.Models")]
    [System.SerializableAttribute()]
    public partial class UserNewsPost : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AuthorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HeaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WrittenByField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AuthorId {
            get {
                return this.AuthorIdField;
            }
            set {
                if ((this.AuthorIdField.Equals(value) != true)) {
                    this.AuthorIdField = value;
                    this.RaisePropertyChanged("AuthorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryId {
            get {
                return this.CategoryIdField;
            }
            set {
                if ((this.CategoryIdField.Equals(value) != true)) {
                    this.CategoryIdField = value;
                    this.RaisePropertyChanged("CategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Header {
            get {
                return this.HeaderField;
            }
            set {
                if ((object.ReferenceEquals(this.HeaderField, value) != true)) {
                    this.HeaderField = value;
                    this.RaisePropertyChanged("Header");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tags {
            get {
                return this.TagsField;
            }
            set {
                if ((object.ReferenceEquals(this.TagsField, value) != true)) {
                    this.TagsField = value;
                    this.RaisePropertyChanged("Tags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WrittenBy {
            get {
                return this.WrittenByField;
            }
            set {
                if ((object.ReferenceEquals(this.WrittenByField, value) != true)) {
                    this.WrittenByField = value;
                    this.RaisePropertyChanged("WrittenBy");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserNewsAppService.IUserNewsAppService")]
    public interface IUserNewsAppService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserNewsAppService/GetAllNewsPosts", ReplyAction="http://tempuri.org/IUserNewsAppService/GetAllNewsPostsResponse")]
        UserNewsApp.UserNewsAppService.UserNewsPost[] GetAllNewsPosts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserNewsAppService/GetAllNewsPosts", ReplyAction="http://tempuri.org/IUserNewsAppService/GetAllNewsPostsResponse")]
        System.Threading.Tasks.Task<UserNewsApp.UserNewsAppService.UserNewsPost[]> GetAllNewsPostsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserNewsAppService/GetFilteredNewsPosts", ReplyAction="http://tempuri.org/IUserNewsAppService/GetFilteredNewsPostsResponse")]
        UserNewsApp.UserNewsAppService.UserNewsPost[] GetFilteredNewsPosts(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserNewsAppService/GetFilteredNewsPosts", ReplyAction="http://tempuri.org/IUserNewsAppService/GetFilteredNewsPostsResponse")]
        System.Threading.Tasks.Task<UserNewsApp.UserNewsAppService.UserNewsPost[]> GetFilteredNewsPostsAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserNewsAppService/Subscribe", ReplyAction="http://tempuri.org/IUserNewsAppService/SubscribeResponse")]
        bool Subscribe(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserNewsAppService/Subscribe", ReplyAction="http://tempuri.org/IUserNewsAppService/SubscribeResponse")]
        System.Threading.Tasks.Task<bool> SubscribeAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserNewsAppService/Unsubscribe", ReplyAction="http://tempuri.org/IUserNewsAppService/UnsubscribeResponse")]
        bool Unsubscribe(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserNewsAppService/Unsubscribe", ReplyAction="http://tempuri.org/IUserNewsAppService/UnsubscribeResponse")]
        System.Threading.Tasks.Task<bool> UnsubscribeAsync(string email);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserNewsAppServiceChannel : UserNewsApp.UserNewsAppService.IUserNewsAppService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserNewsAppServiceClient : System.ServiceModel.ClientBase<UserNewsApp.UserNewsAppService.IUserNewsAppService>, UserNewsApp.UserNewsAppService.IUserNewsAppService {
        
        public UserNewsAppServiceClient() {
        }
        
        public UserNewsAppServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserNewsAppServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserNewsAppServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserNewsAppServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public UserNewsApp.UserNewsAppService.UserNewsPost[] GetAllNewsPosts() {
            return base.Channel.GetAllNewsPosts();
        }
        
        public System.Threading.Tasks.Task<UserNewsApp.UserNewsAppService.UserNewsPost[]> GetAllNewsPostsAsync() {
            return base.Channel.GetAllNewsPostsAsync();
        }
        
        public UserNewsApp.UserNewsAppService.UserNewsPost[] GetFilteredNewsPosts(int id) {
            return base.Channel.GetFilteredNewsPosts(id);
        }
        
        public System.Threading.Tasks.Task<UserNewsApp.UserNewsAppService.UserNewsPost[]> GetFilteredNewsPostsAsync(int id) {
            return base.Channel.GetFilteredNewsPostsAsync(id);
        }
        
        public bool Subscribe(string email) {
            return base.Channel.Subscribe(email);
        }
        
        public System.Threading.Tasks.Task<bool> SubscribeAsync(string email) {
            return base.Channel.SubscribeAsync(email);
        }
        
        public bool Unsubscribe(string email) {
            return base.Channel.Unsubscribe(email);
        }
        
        public System.Threading.Tasks.Task<bool> UnsubscribeAsync(string email) {
            return base.Channel.UnsubscribeAsync(email);
        }
    }
}
